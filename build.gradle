
buildscript {
    repositories {
	mavenCentral()
    }
    dependencies {
    	classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

plugins {
    id 'io.freefair.lombok' version '3.8.4'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

logging.captureStandardOutput LogLevel.QUIET

project.ext {
    cucumberVersion = "4.7.4"
    junitVersion = "4.12"
    seleniumVersion = "3.141.59"
}

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}
    
mainClassName='ohtuminiprojekti.Main'

checkstyle {
	toolVersion = "8.26"
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.6'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    compile 'org.jsoup:jsoup:1.12.1'
    
    compile("com.h2database:h2")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.heroku.sdk:heroku-jdbc:0.1.1")
    compile("org.postgresql:postgresql:9.4.1212.jre7")
    
    compile("org.springframework.boot:spring-boot-devtools")
	
	compile group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
    
    compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: seleniumVersion
	compile group: 'org.seleniumhq.selenium', name: 'htmlunit-driver', version: '2.36.0'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: seleniumVersion
    testCompile("io.github.bonigarcia:webdrivermanager:3.7.1") {
        exclude group: 'org.seleniumhq.selenium'
    }
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework:spring-test")

    testCompile group: "io.cucumber", name: "cucumber-core", version: cucumberVersion
    testCompile group: "io.cucumber", name: "cucumber-java", version: cucumberVersion
    testCompile group: "io.cucumber", name: "cucumber-junit", version: cucumberVersion
    testCompile group: "io.cucumber", name: "cucumber-spring", version: cucumberVersion

    testCompile "junit:junit:" + junitVersion
}

jacocoTestCoverageVerification {
        violationRules {
            rule {
                element = "CLASS"
                limit {
                    counter = "LINE"
                    value = "COVEREDRATIO"
                    minimum = 0.75
                }
                excludes = ["ohtuminiprojekti.Main"]

            }
        }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/Main.class"
            ])
        })
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

